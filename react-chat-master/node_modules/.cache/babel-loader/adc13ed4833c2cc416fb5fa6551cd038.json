{"ast":null,"code":"import _regeneratorRuntime from\"/home/green/Desktop/CHALLENGES TO WORK ON/KAZEEM/BRANDLIVE/brandlive-chat-app/react-chat-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/green/Desktop/CHALLENGES TO WORK ON/KAZEEM/BRANDLIVE/brandlive-chat-app/react-chat-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/green/Desktop/CHALLENGES TO WORK ON/KAZEEM/BRANDLIVE/brandlive-chat-app/react-chat-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/green/Desktop/CHALLENGES TO WORK ON/KAZEEM/BRANDLIVE/brandlive-chat-app/react-chat-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/green/Desktop/CHALLENGES TO WORK ON/KAZEEM/BRANDLIVE/brandlive-chat-app/react-chat-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/green/Desktop/CHALLENGES TO WORK ON/KAZEEM/BRANDLIVE/brandlive-chat-app/react-chat-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{ChannelList}from'./ChannelList';import'./chat.scss';import{MessagesPanel}from'./MessagesPanel';import socketClient from\"socket.io-client\";var SERVER=\"http://127.0.0.1:8080\";export var Chat=/*#__PURE__*/function(_React$Component){_inherits(Chat,_React$Component);var _super=_createSuper(Chat);function Chat(){var _this;_classCallCheck(this,Chat);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={channels:null,socket:null,channel:null};_this.configureSocket=function(){var socket=socketClient(SERVER);socket.on('connection',function(){if(_this.state.channel){_this.handleChannelSelect(_this.state.channel.id);}});socket.on('channel',function(channel){var channels=_this.state.channels;channels.forEach(function(c){if(c.id===channel.id){c.participants=channel.participants;}});_this.setState({channels:channels});});socket.on('message',function(message){var channels=_this.state.channels;channels.forEach(function(c){if(c.id===message.channel_id){if(!c.messages){c.messages=[message];}else{c.messages.push(message);}}});_this.setState({channels:channels});});_this.socket=socket;};_this.loadChannels=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:fetch('http://localhost:8080/getChannels').then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return response.json();case 2:data=_context.sent;_this.setState({channels:data.channels});case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());case 1:case\"end\":return _context2.stop();}}},_callee2);}));_this.handleChannelSelect=function(id){var channel=_this.state.channels.find(function(c){return c.id===id;});_this.setState({channel:channel});_this.socket.emit('channel-join',id,function(ack){});};_this.handleSendMessage=function(channel_id,text){_this.socket.emit('send-message',{channel_id:channel_id,text:text,senderName:_this.socket.id,id:Date.now()});};return _this;}_createClass(Chat,[{key:\"componentDidMount\",value:function componentDidMount(){this.loadChannels();this.configureSocket();}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"chat-app\"},/*#__PURE__*/React.createElement(ChannelList,{channels:this.state.channels,onSelectChannel:this.handleChannelSelect}),/*#__PURE__*/React.createElement(MessagesPanel,{onSendMessage:this.handleSendMessage,channel:this.state.channel}));}}]);return Chat;}(React.Component);","map":{"version":3,"sources":["/home/green/Desktop/CHALLENGES TO WORK ON/KAZEEM/BRANDLIVE/brandlive-chat-app/react-chat-master/src/chat/Chat.js"],"names":["React","ChannelList","MessagesPanel","socketClient","SERVER","Chat","state","channels","socket","channel","configureSocket","on","handleChannelSelect","id","forEach","c","participants","setState","message","channel_id","messages","push","loadChannels","fetch","then","response","json","data","find","emit","ack","handleSendMessage","text","senderName","Date","now","Component"],"mappings":"ivCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,MAAO,aAAP,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,MAAOC,CAAAA,YAAP,KAAyB,kBAAzB,CACA,GAAMC,CAAAA,MAAM,CAAG,uBAAf,CACA,UAAaC,CAAAA,IAAb,+TAEIC,KAFJ,CAEY,CACJC,QAAQ,CAAE,IADN,CAEJC,MAAM,CAAE,IAFJ,CAGJC,OAAO,CAAE,IAHL,CAFZ,OAaIC,eAbJ,CAasB,UAAM,CACpB,GAAIF,CAAAA,MAAM,CAAGL,YAAY,CAACC,MAAD,CAAzB,CACAI,MAAM,CAACG,EAAP,CAAU,YAAV,CAAwB,UAAM,CAC1B,GAAI,MAAKL,KAAL,CAAWG,OAAf,CAAwB,CACpB,MAAKG,mBAAL,CAAyB,MAAKN,KAAL,CAAWG,OAAX,CAAmBI,EAA5C,EACH,CACJ,CAJD,EAKAL,MAAM,CAACG,EAAP,CAAU,SAAV,CAAqB,SAAAF,OAAO,CAAI,CAE5B,GAAIF,CAAAA,QAAQ,CAAG,MAAKD,KAAL,CAAWC,QAA1B,CACAA,QAAQ,CAACO,OAAT,CAAiB,SAAAC,CAAC,CAAI,CAClB,GAAIA,CAAC,CAACF,EAAF,GAASJ,OAAO,CAACI,EAArB,CAAyB,CACrBE,CAAC,CAACC,YAAF,CAAiBP,OAAO,CAACO,YAAzB,CACH,CACJ,CAJD,EAKA,MAAKC,QAAL,CAAc,CAAEV,QAAQ,CAARA,QAAF,CAAd,EACH,CATD,EAUAC,MAAM,CAACG,EAAP,CAAU,SAAV,CAAqB,SAAAO,OAAO,CAAI,CAE5B,GAAIX,CAAAA,QAAQ,CAAG,MAAKD,KAAL,CAAWC,QAA1B,CACAA,QAAQ,CAACO,OAAT,CAAiB,SAAAC,CAAC,CAAI,CAClB,GAAIA,CAAC,CAACF,EAAF,GAASK,OAAO,CAACC,UAArB,CAAiC,CAC7B,GAAI,CAACJ,CAAC,CAACK,QAAP,CAAiB,CACbL,CAAC,CAACK,QAAF,CAAa,CAACF,OAAD,CAAb,CACH,CAFD,IAEO,CACHH,CAAC,CAACK,QAAF,CAAWC,IAAX,CAAgBH,OAAhB,EACH,CACJ,CACJ,CARD,EASA,MAAKD,QAAL,CAAc,CAAEV,QAAQ,CAARA,QAAF,CAAd,EACH,CAbD,EAcA,MAAKC,MAAL,CAAcA,MAAd,CACH,CA7CL,OA+CIc,YA/CJ,sEA+CmB,wIACXC,KAAK,CAAC,mCAAD,CAAL,CAA2CC,IAA3C,2FAAgD,iBAAMC,QAAN,iJAC3BA,CAAAA,QAAQ,CAACC,IAAT,EAD2B,QACxCC,IADwC,eAE5C,MAAKV,QAAL,CAAc,CAAEV,QAAQ,CAAEoB,IAAI,CAACpB,QAAjB,CAAd,EAF4C,sDAAhD,iEADW,wDA/CnB,SAsDIK,mBAtDJ,CAsD0B,SAAAC,EAAE,CAAI,CACxB,GAAIJ,CAAAA,OAAO,CAAG,MAAKH,KAAL,CAAWC,QAAX,CAAoBqB,IAApB,CAAyB,SAAAb,CAAC,CAAI,CACxC,MAAOA,CAAAA,CAAC,CAACF,EAAF,GAASA,EAAhB,CACH,CAFa,CAAd,CAGA,MAAKI,QAAL,CAAc,CAAER,OAAO,CAAPA,OAAF,CAAd,EACA,MAAKD,MAAL,CAAYqB,IAAZ,CAAiB,cAAjB,CAAiChB,EAAjC,CAAqC,SAAAiB,GAAG,CAAI,CAC3C,CADD,EAEH,CA7DL,OA+DIC,iBA/DJ,CA+DwB,SAACZ,UAAD,CAAaa,IAAb,CAAsB,CACtC,MAAKxB,MAAL,CAAYqB,IAAZ,CAAiB,cAAjB,CAAiC,CAAEV,UAAU,CAAVA,UAAF,CAAca,IAAI,CAAJA,IAAd,CAAoBC,UAAU,CAAE,MAAKzB,MAAL,CAAYK,EAA5C,CAAgDA,EAAE,CAAEqB,IAAI,CAACC,GAAL,EAApD,CAAjC,EACH,CAjEL,6FAQwB,CAChB,KAAKb,YAAL,GACA,KAAKZ,eAAL,GACH,CAXL,uCAmEa,CAEL,mBACI,2BAAK,SAAS,CAAC,UAAf,eACI,oBAAC,WAAD,EAAa,QAAQ,CAAE,KAAKJ,KAAL,CAAWC,QAAlC,CAA4C,eAAe,CAAE,KAAKK,mBAAlE,EADJ,cAEI,oBAAC,aAAD,EAAe,aAAa,CAAE,KAAKmB,iBAAnC,CAAsD,OAAO,CAAE,KAAKzB,KAAL,CAAWG,OAA1E,EAFJ,CADJ,CAMH,CA3EL,kBAA0BT,KAAK,CAACoC,SAAhC","sourcesContent":["import React from 'react';\r\nimport { ChannelList } from './ChannelList';\r\nimport './chat.scss';\r\nimport { MessagesPanel } from './MessagesPanel';\r\nimport socketClient from \"socket.io-client\";\r\nconst SERVER = \"http://127.0.0.1:8080\";\r\nexport class Chat extends React.Component {\r\n\r\n    state = {\r\n        channels: null,\r\n        socket: null,\r\n        channel: null\r\n    }\r\n    socket;\r\n    componentDidMount() {\r\n        this.loadChannels();\r\n        this.configureSocket();\r\n    }\r\n\r\n    configureSocket = () => {\r\n        var socket = socketClient(SERVER);\r\n        socket.on('connection', () => {\r\n            if (this.state.channel) {\r\n                this.handleChannelSelect(this.state.channel.id);\r\n            }\r\n        });\r\n        socket.on('channel', channel => {\r\n            \r\n            let channels = this.state.channels;\r\n            channels.forEach(c => {\r\n                if (c.id === channel.id) {\r\n                    c.participants = channel.participants;\r\n                }\r\n            });\r\n            this.setState({ channels });\r\n        });\r\n        socket.on('message', message => {\r\n            \r\n            let channels = this.state.channels\r\n            channels.forEach(c => {\r\n                if (c.id === message.channel_id) {\r\n                    if (!c.messages) {\r\n                        c.messages = [message];\r\n                    } else {\r\n                        c.messages.push(message);\r\n                    }\r\n                }\r\n            });\r\n            this.setState({ channels });\r\n        });\r\n        this.socket = socket;\r\n    }\r\n\r\n    loadChannels = async () => {\r\n        fetch('http://localhost:8080/getChannels').then(async response => {\r\n            let data = await response.json();\r\n            this.setState({ channels: data.channels });\r\n        })\r\n    }\r\n\r\n    handleChannelSelect = id => {\r\n        let channel = this.state.channels.find(c => {\r\n            return c.id === id;\r\n        });\r\n        this.setState({ channel });\r\n        this.socket.emit('channel-join', id, ack => {\r\n        });\r\n    }\r\n\r\n    handleSendMessage = (channel_id, text) => {\r\n        this.socket.emit('send-message', { channel_id, text, senderName: this.socket.id, id: Date.now() });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='chat-app'>\r\n                <ChannelList channels={this.state.channels} onSelectChannel={this.handleChannelSelect} />\r\n                <MessagesPanel onSendMessage={this.handleSendMessage} channel={this.state.channel} />\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}