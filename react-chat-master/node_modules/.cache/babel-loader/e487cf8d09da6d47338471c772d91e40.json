{"ast":null,"code":"var _jsxFileName = \"/home/green/Desktop/CHALLENGES TO WORK ON/KAZEEM/BRANDLIVE/brandlive-chat-app/react-chat-master/src/chat/ChannelList.js\";\nimport React from 'react';\nimport { Channel } from './Channel';\nexport class ChannelList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = id => {\n      this.props.onSelectChannel(id);\n    };\n  }\n\n  render() {\n    let list = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"no-content-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 20\n      }\n    }, \"There is no channels to show\");\n\n    if (this.props.channels && this.props.channels.map) {\n      list = this.props.channels.map(c => /*#__PURE__*/React.createElement(Channel, {\n        key: c.id,\n        id: c.id,\n        name: c.name,\n        participants: c.participants,\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 49\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"channel-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, list);\n  }\n\n}","map":{"version":3,"sources":["/home/green/Desktop/CHALLENGES TO WORK ON/KAZEEM/BRANDLIVE/brandlive-chat-app/react-chat-master/src/chat/ChannelList.js"],"names":["React","Channel","ChannelList","Component","handleClick","id","props","onSelectChannel","render","list","channels","map","c","name","participants"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAE7CC,WAF6C,GAE/BC,EAAE,IAAI;AAChB,WAAKC,KAAL,CAAWC,eAAX,CAA2BF,EAA3B;AACH,KAJ4C;AAAA;;AAM7CG,EAAAA,MAAM,GAAG;AAEL,QAAIC,IAAI,gBAAG;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAX;;AACA,QAAI,KAAKH,KAAL,CAAWI,QAAX,IAAuB,KAAKJ,KAAL,CAAWI,QAAX,CAAoBC,GAA/C,EAAoD;AAChDF,MAAAA,IAAI,GAAG,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,GAApB,CAAwBC,CAAC,iBAAI,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,CAAC,CAACP,EAAhB;AAAoB,QAAA,EAAE,EAAEO,CAAC,CAACP,EAA1B;AAA8B,QAAA,IAAI,EAAEO,CAAC,CAACC,IAAtC;AAA4C,QAAA,YAAY,EAAED,CAAC,CAACE,YAA5D;AAA0E,QAAA,OAAO,EAAE,KAAKV,WAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7B,CAAP;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKK,IADL,CADJ;AAIH;;AAhB4C","sourcesContent":["import React from 'react';\r\nimport { Channel } from './Channel';\r\n\r\nexport class ChannelList extends React.Component {\r\n\r\n    handleClick = id => {\r\n        this.props.onSelectChannel(id);\r\n    }\r\n\r\n    render() {\r\n\r\n        let list = <div className=\"no-content-message\">There is no channels to show</div>;\r\n        if (this.props.channels && this.props.channels.map) {\r\n            list = this.props.channels.map(c => <Channel key={c.id} id={c.id} name={c.name} participants={c.participants} onClick={this.handleClick} />);\r\n        }\r\n        return (\r\n            <div className='channel-list'>\r\n                {list}\r\n            </div>);\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}